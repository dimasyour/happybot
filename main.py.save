# -*- coding: utf-8 -*-
import datetime 
import logging 
import re 
import time

import telebot
from telebot import types
from db_worker import *

bot = telebot.TeleBot("1726661536:AAHd5qaDSFLudBdOxoK-Ui_7AUEigFoYoUI")
logging.basicConfig(filename="errors.log", level=logging.INFO)
today = datetime.date.today()
logging.info("Start HappyBot | " + str(today))

helloMessage = '''
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π {0.first_name}!, —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å
–Ω–∞ —Å–µ—Ä–≤–∏—Å–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
–∏ –æ—Ü–µ–Ω–∫–∏ –∏–Ω–¥–µ–∫—Å–∞ —Å—á–∞—Å—Ç—å—è –≥–æ—Ä–æ–¥–∞ –ò–Ω–Ω–æ–ø–æ–ª–∏—Å.
'''

SUZHD_start = []
SUZHD_answer = []

SSSL_start = []
SSSL_answer = []

SUZHD_text = '''
–ù–∏–∂–µ –¥–∞–Ω—ã —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è –∏–ª–∏ –Ω–µ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è.
–í—ã—Ä–∞–∑–∏—Ç–µ —Å—Ç–µ–ø–µ–Ω—å –í–∞—à–µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è —Å –∫–∞–∂–¥—ã–º –∏–∑ –Ω–∏—Ö, —Å –ø–æ–º–æ—â—å—é —ç–º–æ–∑–¥–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ—Ü–µ–Ω–∫–µ:

1. –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω üò≠
2. –ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω üò•
3. –°–∫–æ—Ä–µ–µ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω ü•∫
4. –ù–µ—á—Ç–æ —Å—Ä–µ–¥–Ω–µ–µ üòê
5. –°–∫–æ—Ä–µ–µ —Å–æ–≥–ª–∞—Å–µ–Ω üòå
6. –°–æ–≥–ª–∞—Å–µ–Ω üòä
7. –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω üòç
'''

# –í–æ–ø—Ä–æ—Å—ã –∫ —Ç–µ—Å—Ç—É –î–∏–Ω–µ—Ä–∞
SUZHD_question = ['1.–í —Ü–µ–ª–æ–º –º–æ—è –∂–∏–∑–Ω—å –±–ª–∏–∑–∫–∞ –∫ –∏–¥–µ–∞–ª—É.',
                  '2.–û–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ –º–æ–µ–π –∂–∏–∑–Ω–∏ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã.',
                  '3.–Ø –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω –º–æ–µ–π –∂–∏–∑–Ω—å—é.',
                  '4.–£ –º–µ–Ω—è –µ—Å—Ç—å –≤ –∂–∏–∑–Ω–∏ —Ç–æ, —á—Ç–æ –º–Ω–µ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –Ω—É–∂–Ω–æ.',
                  '5.–ï—Å–ª–∏ –±—ã –º–Ω–µ –ø—Ä–∏—à–ª–æ—Å—å –∂–∏—Ç—å –µ—â–µ —Ä–∞–∑, —è –±—ã –æ—Å—Ç–∞–≤–∏–ª –≤—Å–µ –∫–∞–∫ –µ—Å—Ç—å.']
SSSL_text = '''
–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –≤—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–¥–Ω—É –∏–∑ —Å–µ–º–∏ —Ü–∏—Ñ—Ä, 
–Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω–æ –≤—ã—Ä–∞–∂–∞—é—â—É—é –í–∞—à–µ –æ—â—É—â–µ–Ω–∏–µ:
–í—ã—Ä–∞–∑–∏—Ç–µ —Å—Ç–µ–ø–µ–Ω—å –í–∞—à–µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è —Å –∫–∞–∂–¥—ã–º –∏–∑ –Ω–∏—Ö, —Å –ø–æ–º–æ—â—å—é —ç–º–æ–∑–¥–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ—Ü–µ–Ω–∫–µ:

1. –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω üò≠
2. üò•
3. ü•∫
4. üòê
5. üòå
6. üòä
7. –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω üòç
'''

# –í–æ–ø—Ä–æ—Å—ã –∫ —Ç–µ—Å—Ç—É –õ—é–±–æ–º–∏—Ä—Å–∫–∏
SSSL_question = ['1.–í —Ü–µ–ª–æ–º —è —Å—á–∏—Ç–∞—é —Å–µ–±—è —Å—á–∞—Å—Ç–ª–∏–≤—ã–º.',
                 '2.–ü–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º —Å–≤–µ—Ä—Å—Ç–Ω–∏–∫–æ–≤, —è –±–æ–ª–µ–µ —Å—á–∞—Å—Ç–ª–∏–≤.',
                 '3.–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ª—é–¥–∏ –æ–±—ã—á–Ω–æ –æ—á–µ–Ω—å —Å—á–∞—Å—Ç–ª–∏–≤—ã. –û–Ω–∏ –ø–æ–ª—É—á–∞—é—Ç —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç –∂–∏–∑–Ω–∏, —á—Ç–æ –±—ã –Ω–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ, –±–µ—Ä—è –æ—Ç –∂–∏–∑–Ω–∏ –≤—Å–µ. –≠—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –º–µ–Ω—è.',
                 '4.–ö–æ–≥–¥–∞ —è –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—é –∏—Å—Ç–æ—Ä–∏—é —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏, —Ç–æ –∏—Å–ø—ã—Ç—ã–≤–∞—é —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ –≤—Å–µ —Å–ª–æ–∂–∏–ª–æ—Å—å.',
                 '5.–£ –º–µ–Ω—è –µ—Å—Ç—å –æ—Ç—á–µ—Ç–ª–∏–≤–æ–µ —á—É–≤—Å—Ç–≤–æ, —á—Ç–æ —è –∂–∏–≤—É –∏–º–µ–Ω–Ω–æ —Å–≤–æ—é –∂–∏–∑–Ω—å, –∏ —á—Ç–æ —è –Ω–µ –ø–æ–º–µ–Ω—è–ª(–∞) –±—ã –µ–µ –Ω–∞ –¥—Ä—É–≥—É—é.',
                 '6.–ö–æ–≥–¥–∞ —è –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—é –∏—Å—Ç–æ—Ä–∏—é —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏, —Ç–æ –∏—Å–ø—ã—Ç—ã–≤–∞—é —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ –≤—Å–µ —Å–ª–æ–∂–∏–ª–æ—Å—å.',
                 '7.–Ø —Å—É–º–µ–ª(–∞) —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–æ–º –∏ –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –º–æ–∏–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º.']

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
keyboard_Menu = types.InlineKeyboardMarkup()
item_Menu1 = types.InlineKeyboardButton(text='üîé –û—Ü–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è', callback_data='grade_menu')
keyboard_Menu.add(item_Menu1)
item_Menu2 = types.InlineKeyboardButton(text='üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã', callback_data='result_menu')
keyboard_Menu.add(item_Menu2)

# –í—ã–±–æ—Ä —à–∫–∞–ª—ã –æ—Ü–µ–Ω–∫–∏
keyboard_test = types.InlineKeyboardMarkup()
item_Test1 = types.InlineKeyboardButton(text='üìà –®–∫–∞–ª–∞ –°.–õ—é–±–æ–º–∏—Ä—Å–∫–∏', callback_data='grade_SSSL')
keyboard_test.add(item_Test1)
item_Test2 = types.InlineKeyboardButton(text='üìâ –®–∫–∞–ª–∞ –≠. –î–∏–Ω–µ—Ä–∞', callback_data='grade_SUZHD')
keyboard_test.add(item_Test2)
item_Test3 = types.InlineKeyboardButton(text='‚úî –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu')
keyboard_test.add(item_Test3)

# –ú–µ–Ω—é –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ (–æ—Ç–∑—ã–≤)
keyboard_claim = types.InlineKeyboardMarkup()
item_Claim1 = types.InlineKeyboardButton(text='–ñ–ö–•', callback_data='claim_zkh')
item_Claim2 = types.InlineKeyboardButton(text='–ó–¥–æ—Ä–æ–≤—å–µ', callback_data='claim_health')
item_Claim3 = types.InlineKeyboardButton(text='–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', callback_data='claim_edu')
keyboard_claim.row(item_Claim1, item_Claim2, item_Claim3)
item_Claim4 = types.InlineKeyboardButton(text='–¢—Ä–∞—Å–ø–æ—Ä—Ç', callback_data='claim_trans')
item_Claim5 = types.InlineKeyboardButton(text='–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', callback_data='claim_games')
item_Claim6 = types.InlineKeyboardButton(text='–§–∏–Ω–∞–Ω—Å—ã', callback_data='claim_finance')
keyboard_claim.row(item_Claim4, item_Claim5, item_Claim6)

# –®–∫–∞–ª–∞ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω—å—é –≠. –î–∏–Ω–µ—Ä–∞
keyboard_SUZHD = types.InlineKeyboardMarkup()
item_SUZHD1 = types.InlineKeyboardButton(text='üò≠', callback_data='ball1d')
# keyboard_SUZHD.add(item_SUZHD1)  # –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω
item_SUZHD2 = types.InlineKeyboardButton(text='üò•', callback_data='ball2d')
# keyboard_SUZHD.add(item_SUZHD2)  # –ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω
item_SUZHD3 = types.InlineKeyboardButton(text='ü•∫', callback_data='ball3d')
# keyboard_SUZHD.add(item_SUZHD3)  # –°–∫–æ—Ä–µ–µ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω
keyboard_SUZHD.row(item_SUZHD1, item_SUZHD2, item_SUZHD3)
item_SUZHD4 = types.InlineKeyboardButton(text='üòê', callback_data='ball4d')
keyboard_SUZHD.add(item_SUZHD4)  # –ù–µ—á—Ç–æ —Å—Ä–µ–¥–Ω–µ–µ
item_SUZHD5 = types.InlineKeyboardButton(text='üòå', callback_data='ball5d')
# keyboard_SUZHD.add(item_SUZHD5)  # –°–∫–æ—Ä–µ–µ —Å–æ–≥–ª–∞—Å–µ–Ω
item_SUZHD6 = types.InlineKeyboardButton(text='üòä', callback_data='ball6d')
# keyboard_SUZHD.add(item_SUZHD6)  # –°–æ–≥–ª–∞—Å–µ–Ω
item_SUZHD7 = types.InlineKeyboardButton(text='üòç', callback_data='ball7d')
# keyboard_SUZHD.add(item_SUZHD7)  # –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω
keyboard_SUZHD.row(item_SUZHD5, item_SUZHD6, item_SUZHD7)

# –®–∫–∞–ª–∞ —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—á–∞—Å—Ç—å—è –°.–õ—é–±–æ–º–∏—Ä—Å–∫–∏
keyboard_SSSL = types.InlineKeyboardMarkup()
item_SSSL1 = types.InlineKeyboardButton(text='üò≠', callback_data='ball1l')
keyboard_SSSL.row(item_SSSL1)  # –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω
item_SSSL2 = types.InlineKeyboardButton(text='üò•', callback_data='ball2l')
# keyboard_SSSL.add(item_SSSL2)
item_SSSL3 = types.InlineKeyboardButton(text='ü•∫', callback_data='ball3l')
# keyboard_SSSL.add(item_SSSL3)
item_SSSL4 = types.InlineKeyboardButton(text='üòê', callback_data='ball4l')
# keyboard_SSSL.add(item_SSSL4)
item_SSSL5 = types.InlineKeyboardButton(text='üòå', callback_data='ball5l')
# keyboard_SSSL.add(item_SSSL5)
item_SSSL6 = types.InlineKeyboardButton(text='üòä', callback_data='ball6l')
# keyboard_SSSL.add(item_SSSL6)
keyboard_SSSL.row(item_SSSL2, item_SSSL3, item_SSSL4, item_SSSL5, item_SSSL6)
item_SSSL7 = types.InlineKeyboardButton(text='üòç', callback_data='ball7l')
keyboard_SSSL.row(item_SSSL7)  # –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–µ–Ω

# –ö–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥
keyboard_Back = types.InlineKeyboardMarkup()
item1_Back = types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥ –∫ —Ç–µ—Å—Ç–∞–º', callback_data='grade_menu')
keyboard_Back.add(item1_Back)
item2_Back = types.InlineKeyboardButton(text='‚úî –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu')
keyboard_Back.add(item2_Back)

# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —à–∫–∞–ª—ã –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
keyboard_choise_result = types.InlineKeyboardMarkup()
item1_choise_result = types.InlineKeyboardButton(text='üìà –ü–æ —à–∫–∞–ª–µ –≠.–î–∏–Ω–µ—Ä–∞', callback_data='choise_result_diner')
item2_choise_result = types.InlineKeyboardButton(text='üìâ –ü–æ —à–∫–∞–ª–µ –°.–õ—é–±–æ–º–∏—Ä—Å–∫–∏', callback_data='choise_result_lubomir')
keyboard_choise_result.row(item1_choise_result, item2_choise_result)
item3_choise_result = types.InlineKeyboardButton(text='‚úî –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu')
keyboard_choise_result.add(item3_choise_result)

# –ö–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ –∏–∑ –≥—Ä–∞—Ñ.—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
keyboard_BackGraph = types.InlineKeyboardMarkup()
item1_BackGraph = types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —à–∫–∞–ª—ã', callback_data='result_menu')
keyboard_BackGraph.add(item1_BackGraph)
item2_BackGraph = types.InlineKeyboardButton(text='‚úî –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='menu')
keyboard_BackGraph.add(item2_BackGraph)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=['start', 'grade', 'claim'])
def start_message(message):
    if message.text == '/start':
        bot.send_message(message.chat.id, '‚òë –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é —á–∞—Ç-–±–æ—Ç–∞\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:',
                         reply_markup=keyboard_Menu)
        # register_new_user(message.from_user.id)
    elif message.text == '/grade':
        bot.send_message(message.chat.id,
                         'üí° –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–∑–º–µ—Ä–µ–Ω–∏–∏ –ò–Ω–¥–µ–∫—Å–∞ –°—á–∞—Å—Ç—å—è\n–ù–æ –ø–µ—Ä–µ–¥ —ç—Ç–∏–º –≤—ã–±–µ—Ä–∏—Ç–µ —à–∫–∞–ª—É:')
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:', reply_markup=keyboard_test)
    elif message.text == '/claim':
        bot.send_message(message.chat.id, 'üí¨ –ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è:',
                         reply_markup=keyboard_claim)


# Callback-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@bot.callback_query_handler(func=lambda call: True)
def callback_main(call):
    if call.data == 'menu':
        bot.send_message(call.message.chat.id, '‚òë –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é!', reply_markup=keyboard_Menu)
    if call.data == 'grade_menu':
        bot.send_message(call.message.chat.id,
                         'üí° –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–∑–º–µ—Ä–µ–Ω–∏–∏ –ò–Ω–¥–µ–∫—Å–∞ –°—á–∞—Å—Ç—å—è\n–ù–æ –ø–µ—Ä–µ–¥ —ç—Ç–∏–º –≤—ã–±–µ—Ä–∏—Ç–µ —à–∫–∞–ª—É:',
                         reply_markup=keyboard_test)
    global SUZHD_start
    global SUZHD_answer
    if call.data == 'grade_SUZHD':
        SUZHD_start = 0
        SUZHD_answer = [0, 0, 0, 0, 0]
        bot.send_message(call.message.chat.id, SUZHD_text)
        bot.send_message(call.message.chat.id, SUZHD_question[SUZHD_start], reply_markup=keyboard_SUZHD)
    if call.data in ['ball1d', 'ball2d', 'ball3d', 'ball4d', 'ball5d', 'ball6d', 'ball7d']:
        if SUZHD_start < 5:
            choise_callback = call.data
            SUZHD_answer[SUZHD_start] = int(choise_callback[4])
            SUZHD_start = SUZHD_start + 1
        if SUZHD_start < 5:
            bot.edit_message_text(chat_id=call.message.chat.id, text=SUZHD_question[SUZHD_start],
                                  message_id=call.message.message_id, reply_markup=keyboard_SUZHD)
        else:
            SUZHD_result = sum(SUZHD_answer)
            bot.send_message(call.message.chat.id,
                             "üìå –ü–æ —à–∫–∞–ª–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω—å—é –≠. –î–∏–Ω–µ—Ä–∞, –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: " + str(SUZHD_result),
                             reply_markup=keyboard_Back)
            dt_now = datetime.datetime.today()
            result_insert_db(call.message.from_user.id, 1, SUZHD_result, dt_now)
    global SSSL_start
    global SSSL_answer
    if call.data == 'grade_SSSL':
        SSSL_start = 0
        SSSL_answer = [0, 0, 0, 0, 0, 0, 0]
        bot.send_message(call.message.chat.id, SSSL_text)
        bot.send_message(call.message.chat.id, SSSL_question[SSSL_start], reply_markup=keyboard_SSSL)
    if call.data in ['ball1l', 'ball2l', 'ball3l', 'ball4l', 'ball5l', 'ball6l', 'ball7l']:
        if SSSL_start < 7:
            choise_callback = call.data
            SSSL_answer[SSSL_start] = int(choise_callback[4])
            SSSL_start = SSSL_start + 1
        if SSSL_start < 7:
            bot.edit_message_text(chat_id=call.message.chat.id, text=SSSL_question[SSSL_start],
                                  message_id=call.message.message_id, reply_markup=keyboard_SSSL)
        else:
            SSSL_result = sum(SSSL_answer)
            bot.send_message(call.message.chat.id,
                             "üìå –ü–æ —à–∫–∞–ª–µ —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—á–∞—Å—Ç—å—è –°.–õ—é–±–æ–º–∏—Ä—Å–∫–∏, –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: " + str(SSSL_result),
                             reply_markup=keyboard_Back)
            dt_now = datetime.datetime.today()
            result_insert_db(call.message.from_user.id, 2, SSSL_result, dt_now)
    if call.data == 'result_menu':
        bot.send_message(call.message.chat.id, 'üìä –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –≤—ã–±–µ—Ä–∏—Ç–µ —à–∫–∞–ª—É:',
                         reply_markup=keyboard_choise_result)
    if call.data == 'choise_result_diner':
        bot.send_message(call.message.chat.id, 'üìà –ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –≥—Ä–∞—Ñ–∏–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ —à–∫–∞–ª–µ –≠.–î–∏–Ω–µ—Ä–∞')
        try:
            photoGraph = open(result_to_graph(call.message.from_user.id, 1), 'rb')
            bot.send_photo(call.message.chat.id, photo=photoGraph)
            bot.send_message(call.message.chat.id, 'üìä –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –≤—ã–±–µ—Ä–∏—Ç–µ —à–∫–∞–ª—É:',
                             reply_markup=keyboard_choise_result)
        except Exception as e:
            logging.error(str(today) + " " + str(e))
            time.sleep(1)
    if call.data == 'choise_result_lubomir':
        bot.send_message(call.message.chat.id,
                         'üìâ –ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –≥—Ä–∞—Ñ–∏–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ —à–∫–∞–ª–µ –°.–õ—é–±–æ–º–∏—Ä—Å–∫–∏')
        try:
            photoGraph = open(result_to_graph(call.message.from_user.id, 2), 'rb')
            bot.send_photo(call.message.chat.id, photo=photoGraph)
            bot.send_message(call.message.chat.id, 'üìä –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –≤—ã–±–µ—Ä–∏—Ç–µ —à–∫–∞–ª—É:',
                             reply_markup=keyboard_choise_result)
        except Exception as e:
            logging.error(str(today) + " " + str(e))
            time.sleep(1)
    if call.data == 'claim_zkh'
bot.polling()
